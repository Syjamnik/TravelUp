// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelUp;

namespace TravelUp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200315174513_updateUserAndTravel")]
    partial class updateUserAndTravel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TravelUp.model.Travel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Header")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Travels");
                });

            modelBuilder.Entity("TravelUp.model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("TravelId")
                        .HasColumnType("int");

                    b.Property<int?>("TravelId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelId");

                    b.HasIndex("TravelId1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TravelUp.model.Travel", b =>
                {
                    b.HasOne("TravelUp.model.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("TravelUp.model.User", null)
                        .WithMany("OnFavouriteList")
                        .HasForeignKey("UserId");

                    b.HasOne("TravelUp.model.User", null)
                        .WithMany("OnVisitedList")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("TravelUp.model.User", b =>
                {
                    b.HasOne("TravelUp.model.Travel", null)
                        .WithMany("OnVisitedList")
                        .HasForeignKey("TravelId");

                    b.HasOne("TravelUp.model.Travel", null)
                        .WithMany("OnFavoriteList")
                        .HasForeignKey("TravelId1");
                });
#pragma warning restore 612, 618
        }
    }
}
